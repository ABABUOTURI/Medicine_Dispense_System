<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doctor's Dashboard</title>
    <style>
        .floating-header {
            position: fixed;
            top: 15px;
            left: 50%;
            transform: translateX(-50%);
            width: 95%;
            background-color: #D3D3D3;
            color: #D3D3D3;
            border-radius: 20px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .floating-header h1 {
            margin: 0;
            color: #008080;
        }

        .sidebar {
            width: 200px;
            background-color: #008080;
            position: fixed;
            top: 120px;
            bottom: 0;
            left: 20px;
            border-radius: 20px;
            padding: 20px;
            color: #fff;
            height: 50%;
            overflow-y: auto;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin: 20px 0;
        }

        .sidebar ul li a {
            color: #fff;
            text-decoration: none;
            font-size: 18px;
            display: block;
        }

        .sidebar ul li a:hover {
            text-decoration: underline;
        }

        .dashboard-container {
            margin-left: 270px;
            padding: 40px;
            width: 70%;
            margin-top: 10%;
            background-color: #D3D3D3;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .dashboard-container h1 {
            color: #008080;
            margin-bottom: 20px;
        }

        .search-bar {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
        }

        .search-bar input[type="text"] {
            width: 80%;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .search-bar button {
            padding: 10px 20px;
            background-color: #008080;
            color: #fff;
            border: none;
            border-radius: 25px;
            cursor: pointer;
        }

        .patient-list {
            margin-top: 20px;
            width: 100%;
            border-collapse: collapse;
        }

        .patient-list th,
        .patient-list td {
            background-color: #fff;
            padding: 12px;
            border: 1px solid #DDD;
            text-align: left;
        }

        .patient-list th {
            background-color: #f2f2f2;
            color: #333;
        }

        .patient-list td a {
            color: #008080;
            text-decoration: none;
        }

        .patient-list td a:hover {
            text-decoration: underline;
        }

        .action-btn {
            padding: 5px 10px;
            background-color: #008080;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .prescription-form {
            display: none;
            background-color: #D3D3D3;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 10%;
            left: 25%;
            width: 50%;
            z-index: 1000;
        }

        .prescription-form h2 {
            color: #008080;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            color: #333;
        }

        .form-group input[type="text"],
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .form-group textarea {
            resize: vertical;
        }

        .form-buttons {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
        }

        .form-buttons button {
            padding: 10px 20px;
            background-color: #008080;
            color: #fff;
            border: none;
            border-radius: 25px;
            cursor: pointer;
        }

        .form-buttons .delete-btn {
            background-color: #ff6347;
        }

        .close-btn {
            background-color: #ff6347;
            color: #fff;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            padding: 5px 10px;
            font-size: 18px;
            position: absolute;
            top: 10px;
            right: 10px;
        }

        .medication-list {
            margin-top: 10px;
        }

        .medication-item {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <!-- Existing floating header and sidebar -->
    <div class="floating-header">
        <h1>Doctor's Dashboard</h1>
    </div>

    <div class="sidebar">
        <ul>
            <li><a href="DoctorDash.htm">Dashboard</a></li>
            <li><a href="PatientRecords.htm">Profile</a></li>
            <li><a href="DoctorDash.htm">Onboarded</a></li>
            <li><a href="onboarding.htm">Onboarding</a></li>
            <li><a href="#">Log Out</a></li>
        </ul>
    </div>

    <div class="dashboard-container">
        <h1 style="text-align: center;">Onboarded Patients</h1>
        <div class="search-bar">
            <input type="text" id="patientSearch" placeholder="Search by Patient Code or ID">
            <button onclick="filterPatients()">Search</button>
        </div>
    <div id="patientListContainer">
        <table class="patient-list">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>First Name</th>
                    <th>Second Name</th>
                    <th>Patient Code</th>
                    <th>Email</th>
                    <th>Phone Number</th>
                    <th>Date of Birth (DoB)</th>
                    <th>Location</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="patientList">
                <!-- Patient data will be dynamically inserted here -->
            </tbody>
        </table>
    </div>

    <div id="prescriptionFormContainer" class="prescription-form">
        <button class="close-btn" onclick="closePrescriptionForm()">Ã—</button>
        <div id="commentSection">
            <h2>Add a Comment</h2>
            <form id="commentForm">
                <div class="form-group">
                    <label for="comment">Enter Comment</label>
                    <textarea id="comment" rows="3" required></textarea>
                </div>
                <div class="form-buttons">
                    <button type="button" onclick="sendComment()">Send Comment</button>
                </div>
            </form>
        </div>
        <div id="prescriptionSection" style="display: none;">
            <h2>Write a Prescription</h2>
            <form id="prescriptionForm">
                <div id="medicationList" class="medication-list">
                    <div class="medication-item">
                        <div class="form-group">
                            <label for="medicationName1">Medication Name</label>
                            <input type="text" id="medicationName1" required>
                        </div>
                        <div class="form-group">
                            <label for="dosage1">Dosage</label>
                            <input type="text" id="dosage1" required>
                        </div>
                        <button type="button" onclick="sendMedication(1)">Send Prescription for This Medication</button>
                    </div>
                </div>
            <button type="button" onclick="addMedication()">Add Another Medication</button>
            <!--   <div class="form-buttons">
                    <button type="button" onclick="sendAllPrescriptions()">Send All Prescriptions</button>
                    <button type="button" class="delete-btn" onclick="deletePrescription()">Delete Prescription</button>
                    <button type="button" onclick="editPrescription()">Edit Prescription</button>
                    <button type="button" onclick="updatePrescription()">Update Prescription</button>
                </div>-->
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
                const authToken = localStorage.getItem('authToken'); // Retrieve the auth token from localStorage

                // Fetch registered patients
                fetch('https://hpms-0be27dd3c23f.herokuapp.com/api/v1/hos/{patient_code}/patient', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${authToken}`, // Include the auth token in the header
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error('Failed to fetch patients');
                    })
                    .then(data => {
                        console.log('Fetched Patients:', data);
                        const patientList = document.getElementById('patientList');
                        patientList.innerHTML = ''; // Clear any existing rows

                        // Iterate over each patient and create a row in the table
                        data.forEach((patient, index) => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                <td>${index + 1}</td>
                <td>${patient.first_name}</td>
                <td>${patient.second_name}</td>
                <td>${patient.patient_code}</td>
                <td>${patient.email}</td>
                <td>${patient.phone_number}</td>
                <td>${patient.DOB}</td>
                <td>${patient.location}</td>
                <td><button class="action-btn" onclick="goToPrescriptionPage('${patient.patient_code}')">Write Prescription</button></td>
            `;
                            patientList.appendChild(row);
                        });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Failed to load patients: ' + error.message);
                    });
            });
        let patientId;
        let medicationIndex = 1;

        function goToPrescriptionPage(id) {
            document.getElementById('prescriptionFormContainer').style.display = 'block';
            patientId = id;
        }

        function closePrescriptionForm() {
            document.getElementById('prescriptionFormContainer').style.display = 'none';
            document.getElementById('commentSection').style.display = 'block';
            document.getElementById('prescriptionSection').style.display = 'none';
            document.getElementById('comment').value = '';
            document.getElementById('medicationList').innerHTML = `
                <div class="medication-item">
                    <div class="form-group">
                        <label for="medicationName1">Medication Name</label>
                        <input type="text" id="medicationName1" required>
                    </div>
                    <div class="form-group">
                        <label for="dosage1">Dosage</label>
                        <input type="text" id="dosage1" required>
                    </div>
                    <button type="button" onclick="sendMedication(1)">Send Prescription for This Medication</button>
                </div>
            `;
            medicationIndex = 1;
        }

       function sendComment() {
            const comment = document.getElementById('comment').value;

            // Assuming you have the prescription_id available
            const prescription_id = 'some_prescription_id'; // Replace with actual prescription_id

            console.log('Sending comment:', comment, 'For patient ID:', patientId);

            // Sending the comment via a POST request to the API
            fetch(`https://hpms-0be27dd3c23f.herokuapp.com/prescription/med/${prescription_id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('authToken')}` // If authentication is needed
                },
                body: JSON.stringify({
                    comment: comment,
                    patient_id: patientId
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Comment sent successfully:', data);
                        alert('Comment sent successfully!');
                    } else {
                        console.error('Error sending comment:', data);
                        alert('Failed to send comment. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while sending the comment.');
                });

            document.getElementById('commentSection').style.display = 'none';
            document.getElementById('prescriptionSection').style.display = 'block';
        }

        function addMedication() {
            medicationIndex++;
            const medicationList = document.getElementById('medicationList');
            const medicationItem = document.createElement('div');
            medicationItem.classList.add('medication-item');
            medicationItem.innerHTML = `
                <div class="form-group">
                    <label for="medicationName${medicationIndex}">Medication Name</label>
                    <input type="text" id="medicationName${medicationIndex}" required>
                </div>
                <div class="form-group">
                    <label for="dosage${medicationIndex}">Dosage</label>
                    <input type="text" id="dosage${medicationIndex}" required>
                </div>
                <button type="button" onclick="sendMedication(${medicationIndex})">Send Prescription for This Medication</button>
            `;
            medicationList.appendChild(medicationItem);
        }

        function sendMedication(index) {
            const medicationName = document.getElementById(`medicationName${index}`).value;
            const dosage = document.getElementById(`dosage${index}`).value;

            if (medicationName && dosage) {
                console.log(`Sending prescription for medication ${index}:`, { medicationName, dosage }, 'For patient ID:', patientId);
                alert(`Prescription for Medication ${index} sent successfully!`);
                // Add code here to actually send the prescription (e.g., via an API call)
            } else {
                alert('Please provide both medication name and dosage.');
            }
        }

        function sendAllPrescriptions() {
            const medications = [];
            for (let i = 1; i <= medicationIndex; i++) {
                const medicationName = document.getElementById(`medicationName${i}`).value;
                const dosage = document.getElementById(`dosage${i}`).value;
                if (medicationName && dosage) {
                    medications.push({ medicationName, dosage });
                }
            }
            if (medications.length > 0) {
                console.log('Sending all prescriptions:', medications, 'For patient ID:', patientId);
                alert('All prescriptions sent successfully!');
                // Add code here to actually send all prescriptions (e.g., via an API call)
            } else {
                alert('No valid prescriptions to send.');
            }
        }

        function deletePrescription() {
            console.log('Deleting prescription for patient ID:', patientId);
            alert('Prescription deleted successfully!');
            // Add code here to actually delete the prescription (e.g., via an API call)
        }

        function editPrescription() {
            console.log('Editing prescription for patient ID:', patientId);
            alert('Prescription edited successfully!');
            // Add code here to actually edit the prescription (e.g., via an API call)
        }

        function updatePrescription() {
            console.log('Updating prescription for patient ID:', patientId);
            alert('Prescription updated successfully!');
            // Add code here to actually update the prescription (e.g., via an API call)
        }
    </script>
</body>

</html>